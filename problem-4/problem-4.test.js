/*
1. 다음은 셀 정렬의 알고리즘입니다. 알고리즘을 보고 다음 값이 주어졌을 때
   어떻게 정렬이 되는지 그림으로 그려보세요.

> 1. 매 h번째 항목들 간에 삽입 정렬을 수행한다.
> 2. h값을 정해진 만큼 줄여나가서 1이 될때까지 줄이면서 위의 과정을 반복한다

```
19, 8, 5, 12, 12, 19, 15, 18, 20, 5, 24, 1, 13, 16, 12, 5
```
h가 13
[19, 8, 5, 12, 12, 19, 15, 18, 20, 5, 24, 1, 13, 16, 12, 5]
->
[16, 8, 5, 12, 12, 19, 15, 18, 20, 5, 24, 1, 13, 19, 12, 5]
->
[16, 8, 5, 12, 12, 19, 15, 18, 20, 5, 24, 1, 13, 19, 12, 5]
->
[16, 8, 5, 12, 12, 19, 15, 18, 20, 5, 24, 1, 13, 19, 12, 5]

h가 4
[16, 8, 5, 12, 12, 19, 15, 18, 20, 5, 24, 1, 13, 19, 12, 5]
->
[12, 8, 5, 12, 16, 19, 15, 18, 20, 5, 24, 1, 13, 19, 12, 5]
->
[12, 8, 5, 12, 16, 19, 15, 18, 20, 5, 24, 1, 13, 19, 12, 5]
->
[12, 8, 5, 12, 16, 19, 15, 18, 20, 5, 24, 1, 13, 19, 12, 5]
->
[12, 5, 5, 12, 16, 8, 15, 18, 20, 19, 24, 1, 13, 19, 12, 5]
->
[12, 5, 5, 12, 16, 8, 15, 18, 20, 19, 24, 1, 13, 19, 12, 5]
->
[12, 5, 5, 1, 16, 8, 15, 12, 20, 19, 24, 18, 13, 19, 12, 5]
->
[12, 5, 5, 1, 13, 8, 15, 12, 16, 19, 24, 18, 20, 19, 12, 5]
->
[12, 5, 5, 1, 13, 8, 15, 12, 16, 19, 24, 18, 20, 19, 12, 5]
->
[12, 5, 5, 1, 13, 8, 12, 12, 16, 19, 15, 18, 20, 19, 24, 5]
->
[12, 5, 5, 1, 13, 8, 12, 5, 16, 19, 15, 12, 20, 19, 24, 18]

h가 1
[1, 5, 5, 5, 8, 12, 12, 12, 13, 15, 16, 18, 19, 19, 20, 24]

2. 셀 정렬의 코드를 보고 어떻게 동작하는지 그림을 그려보세요. 마찬가지로 위의 값이 주어졌다고 했을 때 코드를 따라가며 그림을 그려가며 이해해 보세요.

3. 셀 정렬의 코드를 직접 구현해 주세요.

*/

const exchange = (array, a, b) => {
  [array[b], array[a]] = [array[a], array[b]];
};

const compare = (array, a, b) => array[a] < array[b];

const shellSort = (array) => {
  let h = 1;
  while (h < array.length / 3) {
    h = 3 * h + 1;
  }

  while (h >= 1) {
    for (let i = h; i < array.length; i++) {
      for (let j = i; j >= 0; j = j - h) {
        if (compare(array, j, j - h)) {
          exchange(array, j, j - h);
        }
      }
    }

    h = Math.floor(h / 3);
  }
};

test.each([
  [[24, 20, 19, 19, 18, 16, 15, 13, 12, 12, 12, 8, 5, 5, 5, 1]],
  [[1, 5, 5, 5, 8, 12, 12, 12, 13, 15, 16, 18, 19, 19, 20, 24]],
  [[19, 8, 5, 12, 12, 19, 15, 18, 20, 5, 24, 1, 13, 16, 12, 5]],
])("주어진 배열을 오름차순으로 정렬한다", (array) => {
  shellSort(array);

  expect(array).toEqual([
    1, 5, 5, 5, 8, 12, 12, 12, 13, 15, 16, 18, 19, 19, 20, 24,
  ]);
});
